{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.35.1.17967",
      "templateHash": "10025027508449333"
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the Service Bus namespace"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The Azure region where the Service Bus namespace should be created"
      }
    },
    "capacityUnits": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        2,
        4,
        8,
        16
      ],
      "metadata": {
        "description": "Specifies the capacity units for the Service Bus namespace (Premium tier only). Valid values are 1, 2, 4, 8, or 16."
      }
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "metadata": {
        "description": "The ID of the Log Analytics workspace to which diagnostic logs will be sent"
      }
    },
    "subnetId": {
      "type": "string",
      "metadata": {
        "description": "The ID of the subnet for the private endpoint"
      }
    },
    "vnetId": {
      "type": "string",
      "metadata": {
        "description": "The ID of the virtual network for the private DNS zone link"
      }
    },
    "queues": {
      "type": "array",
      "defaultValue": [
        {
          "name": "orders-queue",
          "maxSizeInMegabytes": 1024,
          "defaultMessageTtl": "P14D",
          "maxDeliveryCount": 10
        },
        {
          "name": "notifications-queue",
          "maxSizeInMegabytes": 1024,
          "defaultMessageTtl": "P7D",
          "maxDeliveryCount": 5,
          "requiresSession": true,
          "deadLetteringOnMessageExpiration": true
        }
      ],
      "metadata": {
        "description": "List of Service Bus queues to create"
      }
    },
    "topics": {
      "type": "array",
      "defaultValue": [
        {
          "name": "events",
          "maxSizeInMegabytes": 1024,
          "defaultMessageTtl": "P14D",
          "subscriptions": [
            {
              "name": "all-events",
              "maxDeliveryCount": 10
            },
            {
              "name": "critical-events",
              "maxDeliveryCount": 20,
              "defaultMessageTtl": "P7D",
              "requiresSession": true
            }
          ]
        },
        {
          "name": "alerts",
          "maxSizeInMegabytes": 1024,
          "subscriptions": [
            {
              "name": "system-alerts",
              "maxDeliveryCount": 10
            },
            {
              "name": "security-alerts",
              "maxDeliveryCount": 10,
              "deadLetteringOnMessageExpiration": true,
              "deadLetteringOnFilterEvaluationError": true
            }
          ]
        }
      ],
      "metadata": {
        "description": "List of Service Bus topics to create"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Tags for resources"
      }
    }
  },
  "variables": {
    "flattenedSubscriptions": "[flatten(map(parameters('topics'), lambda('topic', map(coalesce(tryGet(lambdaVariables('topic'), 'subscriptions'), createArray()), lambda('sub', createObject('topicName', lambdaVariables('topic').name, 'subscriptionName', lambdaVariables('sub').name, 'subscriptionConfig', lambdaVariables('sub')))))))]"
  },
  "resources": [
    {
      "type": "Microsoft.ServiceBus/namespaces",
      "apiVersion": "2022-10-01-preview",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Premium",
        "tier": "Premium",
        "capacity": "[parameters('capacityUnits')]"
      },
      "properties": {
        "premiumMessagingPartitions": "[min(parameters('capacityUnits'), 4)]"
      }
    },
    {
      "copy": {
        "name": "serviceBusQueue",
        "count": "[length(parameters('queues'))]"
      },
      "type": "Microsoft.ServiceBus/namespaces/queues",
      "apiVersion": "2022-10-01-preview",
      "name": "[format('{0}/{1}', parameters('name'), parameters('queues')[copyIndex()].name)]",
      "properties": {
        "maxSizeInMegabytes": "[tryGet(parameters('queues')[copyIndex()], 'maxSizeInMegabytes')]",
        "defaultMessageTimeToLive": "[tryGet(parameters('queues')[copyIndex()], 'defaultMessageTtl')]",
        "maxDeliveryCount": "[tryGet(parameters('queues')[copyIndex()], 'maxDeliveryCount')]",
        "lockDuration": "[tryGet(parameters('queues')[copyIndex()], 'lockDuration')]",
        "requiresDuplicateDetection": "[tryGet(parameters('queues')[copyIndex()], 'requiresDuplicateDetection')]",
        "requiresSession": "[tryGet(parameters('queues')[copyIndex()], 'requiresSession')]",
        "deadLetteringOnMessageExpiration": "[tryGet(parameters('queues')[copyIndex()], 'deadLetteringOnMessageExpiration')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('name'))]"
      ]
    },
    {
      "copy": {
        "name": "serviceBusTopic",
        "count": "[length(parameters('topics'))]"
      },
      "type": "Microsoft.ServiceBus/namespaces/topics",
      "apiVersion": "2022-10-01-preview",
      "name": "[format('{0}/{1}', parameters('name'), parameters('topics')[copyIndex()].name)]",
      "properties": {
        "maxSizeInMegabytes": "[tryGet(parameters('topics')[copyIndex()], 'maxSizeInMegabytes')]",
        "defaultMessageTimeToLive": "[tryGet(parameters('topics')[copyIndex()], 'defaultMessageTtl')]",
        "requiresDuplicateDetection": "[tryGet(parameters('topics')[copyIndex()], 'requiresDuplicateDetection')]",
        "supportOrdering": "[tryGet(parameters('topics')[copyIndex()], 'supportOrdering')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('name'))]"
      ]
    },
    {
      "copy": {
        "name": "serviceBusSubscription",
        "count": "[length(variables('flattenedSubscriptions'))]"
      },
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
      "apiVersion": "2022-10-01-preview",
      "name": "[format('{0}/{1}/{2}', parameters('name'), parameters('topics')[indexOf(map(parameters('topics'), lambda('t', lambdaVariables('t').name)), variables('flattenedSubscriptions')[copyIndex()].topicName)].name, variables('flattenedSubscriptions')[copyIndex()].subscriptionName)]",
      "properties": {
        "maxDeliveryCount": "[tryGet(variables('flattenedSubscriptions')[copyIndex()].subscriptionConfig, 'maxDeliveryCount')]",
        "defaultMessageTimeToLive": "[tryGet(variables('flattenedSubscriptions')[copyIndex()].subscriptionConfig, 'defaultMessageTtl')]",
        "lockDuration": "[tryGet(variables('flattenedSubscriptions')[copyIndex()].subscriptionConfig, 'lockDuration')]",
        "deadLetteringOnMessageExpiration": "[tryGet(variables('flattenedSubscriptions')[copyIndex()].subscriptionConfig, 'deadLetteringOnMessageExpiration')]",
        "deadLetteringOnFilterEvaluationExceptions": "[tryGet(variables('flattenedSubscriptions')[copyIndex()].subscriptionConfig, 'deadLetteringOnFilterEvaluationError')]",
        "requiresSession": "[tryGet(variables('flattenedSubscriptions')[copyIndex()].subscriptionConfig, 'requiresSession')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('name'), parameters('topics')[indexOf(map(parameters('topics'), lambda('t', lambdaVariables('t').name)), variables('flattenedSubscriptions')[copyIndex()].topicName)].name)]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.ServiceBus/namespaces/{0}', parameters('name'))]",
      "name": "sb-diag",
      "properties": {
        "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
        "logs": [
          {
            "category": "OperationalLogs",
            "enabled": true
          },
          {
            "category": "VNetAndIPFilteringLogs",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('name'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "sb-dns-zone",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "zoneName": {
            "value": "privatelink.servicebus.windows.net"
          },
          "linkName": {
            "value": "sb-dns-link"
          },
          "vnetId": {
            "value": "[parameters('vnetId')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.35.1.17967",
              "templateHash": "7075831902465965476"
            }
          },
          "parameters": {
            "zoneName": {
              "type": "string",
              "metadata": {
                "description": "DNS zone name"
              }
            },
            "linkName": {
              "type": "string",
              "metadata": {
                "description": "Virtual network link name"
              }
            },
            "vnetId": {
              "type": "string",
              "metadata": {
                "description": "Virtual network ID"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for resources"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('zoneName')]",
              "location": "global",
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('zoneName'), parameters('linkName'))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
              ]
            }
          ],
          "outputs": {
            "zoneName": {
              "type": "string",
              "value": "[parameters('zoneName')]"
            },
            "zoneId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "sb-private-endpoint",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('{0}-pe', parameters('name'))]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subnetId": {
            "value": "[parameters('subnetId')]"
          },
          "connectionName": {
            "value": "[format('{0}-pe-conn', parameters('name'))]"
          },
          "privateConnectionResourceId": {
            "value": "[resourceId('Microsoft.ServiceBus/namespaces', parameters('name'))]"
          },
          "subresourceNames": {
            "value": [
              "namespace"
            ]
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.35.1.17967",
              "templateHash": "17125716119265900570"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Private endpoint name"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure region"
              }
            },
            "subnetId": {
              "type": "string",
              "metadata": {
                "description": "Subnet ID for the private endpoint"
              }
            },
            "connectionName": {
              "type": "string",
              "metadata": {
                "description": "Private service connection name"
              }
            },
            "privateConnectionResourceId": {
              "type": "string",
              "metadata": {
                "description": "Resource ID for the private connection"
              }
            },
            "subresourceNames": {
              "type": "array",
              "metadata": {
                "description": "Subresource names for the private endpoint"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for resources"
              }
            },
            "customNetworkInterfaceName": {
              "type": "string",
              "defaultValue": "[format('nic-{0}', parameters('name'))]",
              "metadata": {
                "description": "Optional custom network interface name"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-04-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('subnetId')]"
                },
                "customNetworkInterfaceName": "[parameters('customNetworkInterfaceName')]",
                "privateLinkServiceConnections": [
                  {
                    "name": "[parameters('connectionName')]",
                    "properties": {
                      "privateLinkServiceId": "[parameters('privateConnectionResourceId')]",
                      "groupIds": "[parameters('subresourceNames')]"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "privateIpAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('name')), '2023-04-01').networkInterfaces[0].properties.ipConfigurations[0].properties.privateIPAddress]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('name'))]"
      ]
    }
  ],
  "outputs": {
    "namespaceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ServiceBus/namespaces', parameters('name'))]"
    },
    "namespaceName": {
      "type": "string",
      "value": "[parameters('name')]"
    }
  }
}