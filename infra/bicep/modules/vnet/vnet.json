{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.35.1.17967",
      "templateHash": "2965039631598451540"
    }
  },
  "parameters": {
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual network"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Azure region"
      }
    },
    "addressSpaces": {
      "type": "array",
      "metadata": {
        "description": "Array of address spaces for the VNet"
      }
    },
    "subnets": {
      "type": "array",
      "metadata": {
        "description": "Array of subnet objects"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Tags for resources"
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "subnetNsgMap",
        "count": "[length(parameters('subnets'))]",
        "input": {
          "subnetName": "[parameters('subnets')[copyIndex('subnetNsgMap')].name]",
          "hasNsg": "[contains(parameters('subnets')[copyIndex('subnetNsgMap')], 'nsg')]",
          "nsgName": "[if(contains(parameters('subnets')[copyIndex('subnetNsgMap')], 'nsg'), parameters('subnets')[copyIndex('subnetNsgMap')].nsg.name, '')]"
        }
      },
      {
        "name": "subnetRtMap",
        "count": "[length(parameters('subnets'))]",
        "input": {
          "subnetName": "[parameters('subnets')[copyIndex('subnetRtMap')].name]",
          "hasRt": "[contains(parameters('subnets')[copyIndex('subnetRtMap')], 'routeTable')]",
          "rtName": "[if(contains(parameters('subnets')[copyIndex('subnetRtMap')], 'routeTable'), parameters('subnets')[copyIndex('subnetRtMap')].routeTable.name, '')]"
        }
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-04-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[parameters('addressSpaces')]"
        }
      }
    },
    {
      "copy": {
        "name": "subnet",
        "count": "[length(parameters('subnets'))]"
      },
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-04-01",
      "name": "[format('{0}/{1}', parameters('vnetName'), parameters('subnets')[copyIndex()].name)]",
      "properties": {
        "addressPrefix": "[parameters('subnets')[copyIndex()].addressPrefixes[0]]",
        "addressPrefixes": "[parameters('subnets')[copyIndex()].addressPrefixes]",
        "serviceEndpoints": "[tryGet(parameters('subnets')[copyIndex()], 'serviceEndpoints')]",
        "delegations": "[if(tryGet(parameters('subnets')[copyIndex()], 'delegation'), createArray(createObject('name', parameters('subnets')[copyIndex()].delegation.name, 'properties', createObject('serviceName', parameters('subnets')[copyIndex()].delegation.serviceName))), null())]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    },
    {
      "copy": {
        "name": "networkSecurityGroup",
        "count": "[length(parameters('subnets'))]"
      },
      "condition": "[tryGet(parameters('subnets')[copyIndex()], 'nsg')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-04-01",
      "name": "[parameters('subnets')[copyIndex()].nsg.name]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "copy": [
          {
            "name": "securityRules",
            "count": "[length(parameters('subnets')[copyIndex()].nsg.securityRules)]",
            "input": {
              "name": "[parameters('subnets')[copyIndex()].nsg.securityRules[copyIndex('securityRules')].name]",
              "properties": {
                "priority": "[parameters('subnets')[copyIndex()].nsg.securityRules[copyIndex('securityRules')].priority]",
                "direction": "[parameters('subnets')[copyIndex()].nsg.securityRules[copyIndex('securityRules')].direction]",
                "access": "[parameters('subnets')[copyIndex()].nsg.securityRules[copyIndex('securityRules')].access]",
                "protocol": "[parameters('subnets')[copyIndex()].nsg.securityRules[copyIndex('securityRules')].protocol]",
                "sourcePortRange": "[tryGet(parameters('subnets')[copyIndex()].nsg.securityRules[copyIndex('securityRules')], 'sourcePortRange')]",
                "sourcePortRanges": "[tryGet(parameters('subnets')[copyIndex()].nsg.securityRules[copyIndex('securityRules')], 'sourcePortRanges')]",
                "destinationPortRange": "[tryGet(parameters('subnets')[copyIndex()].nsg.securityRules[copyIndex('securityRules')], 'destinationPortRange')]",
                "destinationPortRanges": "[tryGet(parameters('subnets')[copyIndex()].nsg.securityRules[copyIndex('securityRules')], 'destinationPortRanges')]",
                "sourceAddressPrefix": "[tryGet(parameters('subnets')[copyIndex()].nsg.securityRules[copyIndex('securityRules')], 'sourceAddressPrefix')]",
                "sourceAddressPrefixes": "[tryGet(parameters('subnets')[copyIndex()].nsg.securityRules[copyIndex('securityRules')], 'sourceAddressPrefixes')]",
                "destinationAddressPrefix": "[tryGet(parameters('subnets')[copyIndex()].nsg.securityRules[copyIndex('securityRules')], 'destinationAddressPrefix')]",
                "destinationAddressPrefixes": "[tryGet(parameters('subnets')[copyIndex()].nsg.securityRules[copyIndex('securityRules')], 'destinationAddressPrefixes')]",
                "description": "[parameters('subnets')[copyIndex()].nsg.securityRules[copyIndex('securityRules')].description]"
              }
            }
          }
        ]
      }
    },
    {
      "copy": {
        "name": "subnetNsgAssociation",
        "count": "[length(variables('subnetNsgMap'))]"
      },
      "condition": "[variables('subnetNsgMap')[copyIndex()].hasNsg]",
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-04-01",
      "name": "[format('{0}/{1}', parameters('vnetName'), variables('subnetNsgMap')[copyIndex()].subnetName)]",
      "properties": {
        "addressPrefix": "[reference(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name), '2023-04-01').addressPrefix]",
        "addressPrefixes": "[reference(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name), '2023-04-01').addressPrefixes]",
        "serviceEndpoints": "[reference(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name), '2023-04-01').serviceEndpoints]",
        "delegations": "[reference(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name), '2023-04-01').delegations]",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('subnetNsgMap')[copyIndex()].nsgName)]"
        }
      },
      "dependsOn": [
        "networkSecurityGroup",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name)]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name)]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name)]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name)]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name)]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    },
    {
      "copy": {
        "name": "routeTable",
        "count": "[length(parameters('subnets'))]"
      },
      "condition": "[contains(parameters('subnets')[copyIndex()], 'routeTable')]",
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2023-04-01",
      "name": "[parameters('subnets')[copyIndex()].routeTable.name]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "copy": [
          {
            "name": "routes",
            "count": "[length(parameters('subnets')[copyIndex()].routeTable.routes)]",
            "input": {
              "name": "[parameters('subnets')[copyIndex()].routeTable.routes[copyIndex('routes')].name]",
              "properties": {
                "addressPrefix": "[parameters('subnets')[copyIndex()].routeTable.routes[copyIndex('routes')].addressPrefix]",
                "nextHopType": "[parameters('subnets')[copyIndex()].routeTable.routes[copyIndex('routes')].nextHopType]",
                "nextHopIpAddress": "[tryGet(parameters('subnets')[copyIndex()].routeTable.routes[copyIndex('routes')], 'nextHopIpAddress')]"
              }
            }
          }
        ]
      }
    },
    {
      "copy": {
        "name": "subnetRtAssociation",
        "count": "[length(variables('subnetRtMap'))]"
      },
      "condition": "[variables('subnetRtMap')[copyIndex()].hasRt]",
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2023-04-01",
      "name": "[format('{0}/{1}', parameters('vnetName'), variables('subnetRtMap')[copyIndex()].subnetName)]",
      "properties": {
        "addressPrefix": "[reference(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name), '2023-04-01').addressPrefix]",
        "addressPrefixes": "[reference(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name), '2023-04-01').addressPrefixes]",
        "serviceEndpoints": "[reference(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name), '2023-04-01').serviceEndpoints]",
        "delegations": "[reference(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name), '2023-04-01').delegations]",
        "networkSecurityGroup": "[if(and(contains(variables('subnetNsgMap')[copyIndex()], 'hasNsg'), variables('subnetNsgMap')[copyIndex()].hasNsg), createObject('id', resourceId('Microsoft.Network/networkSecurityGroups', variables('subnetNsgMap')[copyIndex()].nsgName)), null())]",
        "routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', variables('subnetRtMap')[copyIndex()].rtName)]"
        }
      },
      "dependsOn": [
        "routeTable",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name)]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name)]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name)]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name)]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnets')[copyIndex()].name)]",
        "subnetNsgAssociation",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    }
  ],
  "outputs": {
    "vnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
    },
    "subnetIds": {
      "type": "object",
      "value": {
        "apim": "[format('{0}/subnets/apim', resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')))]",
        "private-endpoints": "[format('{0}/subnets/private-endpoints', resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')))]",
        "ase": "[format('{0}/subnets/ase', resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')))]"
      }
    }
  }
}